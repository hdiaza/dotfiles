[credential]
   helper = cache
[alias]
   #quick look at all repo
   loggsa = log --color --date-order --graph --oneline --decorate --simplify-by-decoration --all
   #quick look at active branch (or refs pointed)
   loggs  = log --color --date-order --graph --oneline --decorate --simplify-by-decoration
   #extend look at all repo
   logga  = log --color --date-order --graph --oneline --decorate --all
   #extend look at active branch
   logg   = log --color --date-order --graph --oneline --decorate
   #Look with date
   logda  = log --color --date-order --graph              --format=\"%C(auto)%h%Creset %C(blue bold)%ad%Creset %Cgreen%aN %C(auto)%d%Creset %s\" --all
   logd   = log --color --date-order --graph              --format=\"%C(auto)%h%Creset %C(blue bold)%ad%Creset %Cgreen%aN %C(auto)%d%Creset %s\"
   #Look with relative date
   logdra = log --color --date-order --date=local --graph --format=\"%C(auto)%h%Creset %C(blue bold)%ad%Creset %Cgreen%aN %C(auto)%d%Creset %s\" --all
   logdr = log --color --date-order --date=local --graph  --format=\"%C(auto)%h%Creset %C(blue bold)%ad%Creset %Cgreen%aN %C(auto)%d%Creset %s\"
   #Look dates with email
   logdma  = log --color --date-order --graph               --format=\"%C(auto)%h%Creset %C(blue bold)%ad%Creset %Cgreen%aN<%ae> %C(auto)%d%Creset %s\" --all
   logdm   = log --color --date-order --graph               --format=\"%C(auto)%h%Creset %C(blue bold)%ad%Creset %Cgreen%aN<%ae> %C(auto)%d%Creset %s\"
   logdrma = log --color --date-order --date=local --graph --format=\"%C(auto)%h%Creset %C(blue bold)%ad%Creset %Cgreen%aN<%ae> %C(auto)%d%Creset %s\" --all
   logdrm = log --color --date-order --date=local --graph  --format=\"%C(auto)%h%Creset %C(blue bold)%ad%Creset %Cgreen%aN<%ae> %C(auto)%d%Creset %s\"
   
   loga = log --color --graph --decorate --all
   logs = log --graph --format=\"%C(auto)%h %d %<|(100,trunc) %s\"
   logsa = log --graph --all --format=\"%C(auto)%h %d %<|(100,trunc) %s\"
   logssa = log --graph --all --simplify-by-decoration --format=\"%C(auto)%h %d %<|(100,trunc) %s\"

   find = "!git log --color -p -S "
   tdiff = diff --ignore-space-at-eol -b --ignore-blank-lines
   tshow = show --ignore-space-at-eol -b --ignore-blank-lines
   showm = show -M
   shown = show --name-only
   showns = show --name-status
   dirdiff = difftool --dir-diff
   recommit = commit --amend -C HEAD
   diffc = diff --cached
   diffcm = diff --cached -M
   sdiff = difftool -y --extcmd icdiff
   sdiffw = difftool -y --extcmd \"icdiff --whole-file\"

   #typical workflow when forget something
   commitrebase = commit -m \"[REBASE] automatic commit to be rebased\"
   rebaseroot = rebase -i --root

   addu = add -u
   adda = add :/
   addp = add -p
   pushf = push -f
   files = show --name-only
   rework = commit --amend -c HEAD

   statusu = status -u
   statusi = status --ignored

   upstream = for-each-ref --format='%(refname:short) <- %(upstream:short)' refs/heads
   showalias = config --get-regexp alias

   econfigg = config --global -e
   econfig = config -e

   cleanall = clean -dxf
   ls-subtrees = !"git log | grep git-subtree-dir | awk '{ print $2 }'"

   cleanall = clean -dxf

[status]
   color = auto
[merge]
   tool = meld
[core]
   autocrlf = input
   editor = vim
[push]
   default = simple
[color]
   ui = auto
[help]
   browser = google-chrome
[loop]
   global-command = recommit rework
   diff-command = tdiff
[graph]
   viewer = display
[diff]
	mnemonicprefix = true
